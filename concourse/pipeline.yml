---
resources:
  - name: git-master
    type: git
    icon: github-circle
    source:
      uri: https://github.com/alphagov/govuk-coronavirus-find-support
      branch: master

  - name: git-master-gems-dockerfile
    icon: github-circle
    type: git
    source:
      uri:  https://github.com/alphagov/govuk-coronavirus-find-support
      branch: master
      paths:
        - concourse/Dockerfile
        - Gemfile
        - Gemfile.lock

  - name: every-day
    type: time
    source:
      interval: 24h

  - name: tests-image
    type: docker-image
    icon: docker
    source:
      repository: ((readonly_private_ecr_repo_url))
      tag: govuk-coronavirus-find-support-tests-image

jobs:
  - name: update-pipeline
    plan:
      - get: git-master
        trigger: true
      - set_pipeline: govuk-corona-find-support-form
        file: git-master/concourse/pipeline.yml

  - name: build-tests-image
    serial: true
    build_logs_to_retain: 100
    plan:
      - get: every-day
        trigger: true
      - get: git-master-gems-dockerfile
        trigger: true
      - put: tests-image
        params:
          build: git-master-gems-dockerfile
          dockerfile: git-master-gems-dockerfile/concourse/Dockerfile

  - name: run-quality-checks
    serial: true
    plan:
      - get: tests-image
        passed:
          - build-tests-image
        trigger: true
      - get: git-master
        trigger: true
      - task: run-tests-task
        image: tests-image
        config:
          inputs:
            - name: git-master
          outputs:
            - name: committer-details
          platform: linux
          run:
            dir: git-master
            path: bash
            args:
              - -c
              - |
                set -eu
                service postgresql start
                su - postgres -c "psql -c \"create role root with createdb login password 'password';\""
                export DATABASE_URL="postgres://root:password@localhost:5432/coronavirus_find_support_form_development"
                bundle install
                bundle exec rails db:setup
                bundle exec rails db:migrate
                bundle exec rake

  - name: deploy-to-staging
    serial: true
    plan:
      - get: git-master
        trigger: true
        passed: [run-quality-checks]
      - task: deploy-to-paas
        config:
        file: git-master/concourse/tasks/deploy-to-govuk-paas.yml
        params:
          CF_SPACE: staging
          INSTANCES: 5
          CF_STARTUP_TIMEOUT: 5 # minutes
          REQUIRE_BASIC_AUTH: "true"
          BASIC_AUTH_PASSWORD: ((basic-auth-password))
          AWS_ACCESS_KEY_ID: ((aws-access-key-id))
          AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
          SECRET_KEY_BASE: ((secret-key-base-staging))
          AWS_ASSETS_BUCKET_NAME: govuk-coronavirus-find-support-assets-staging
          DATA_EXPORT_BASIC_AUTH_USERNAME: ((data-export-basic-auth-username))
          DATA_EXPORT_BASIC_AUTH_PASSWORD: ((data-export-basic-auth-password))
          HOSTNAME: govuk-coronavirus-find-support-stg

  - name: smoke-test-staging
    plan:
      - get: git-master
        trigger: true
        passed: [deploy-to-staging]
      - get: tests-image
        passed:
          - build-tests-image
      - task: smoke-test
        file: git-master/concourse/tasks/smoke-test.yml
        params:
          URL: 'https://govuk-coronavirus-find-support-stg.cloudapps.digital/urgent-medical-help'
          MESSAGE: "Checks that the application deployed to staging is not serving HTTP error codes"
      - task: run-smoke-tests
        image: tests-image
        file: git-master/concourse/tasks/run-smoke-tests.yml
        params:
          TEST_URL: 'https://gds:((basic-auth-password))@govuk-coronavirus-find-support-stg.cloudapps.digital'

  - name: deploy-to-prod
    serial: true
    plan:
      - get: git-master
        trigger: true
        passed: [smoke-test-staging]
      - task: deploy-to-paas
        file: git-master/concourse/tasks/deploy-to-govuk-paas.yml
        params:
          CF_SPACE: production
          INSTANCES: 30
          CF_STARTUP_TIMEOUT: 15 # minutes
          REQUIRE_BASIC_AUTH:
          BASIC_AUTH_PASSWORD: ((basic-auth-password))
          AWS_ACCESS_KEY_ID: ((aws-access-key-id-prod))
          AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key-prod))
          SECRET_KEY_BASE: ((secret-key-base-prod))
          AWS_ASSETS_BUCKET_NAME: govuk-coronavirus-find-support-assets-prod
          DATA_EXPORT_BASIC_AUTH_USERNAME: ((data-export-basic-auth-username))
          DATA_EXPORT_BASIC_AUTH_PASSWORD: ((data-export-basic-auth-password))
          HOSTNAME: govuk-coronavirus-find-support-prod

  - name: smoke-test-prod
    serial: true
    plan:
      - get: git-master
        trigger: true
        passed: [deploy-to-prod]
      - get: tests-image
        passed:
          - build-tests-image
      - task: smoke-test
        file: git-master/concourse/tasks/smoke-test.yml
        timeout: 5m
        params:
          URL: 'https://govuk-coronavirus-find-support-prod.cloudapps.digital/urgent-medical-help'
          MESSAGE: "Checks that the application deployed to production is not serving HTTP error codes. If this fails, you should investigate immediately."
      - task: run-smoke-tests
        image: tests-image
        file: git-master/concourse/tasks/run-smoke-tests.yml
        params:
          TEST_URL: 'https://find-coronavirus-support.service.gov.uk'
